// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int              @id @unique
  avatar          String
  username        String           @unique
  secretO2FA      String?
  session         String?
  xp              Int
  role            Int              @default(0)
  status          Status           @default(OFFLINE)
  userMatches     UserMatch[]
  userFriendships UserFriendship[]
  blocksInitiated Block[]          @relation("blockInitiator")
  blocksReceived  Block[]          @relation("blockReceiver")
  channels        UserChannel[]
  createdChannels Channel[]
  messages        Message[]
  messagesReaded  Message[]        @relation("UserReadedMessages")
}

model UserFriendship {
  id         Int       @id @default(autoincrement())
  senderId   Int
  targetId   Int
  acceptedAt DateTime?
  target     User      @relation(fields: [targetId], references: [id])
}

model Match {
  id    Int         @id @default(autoincrement())
  users UserMatch[]
}

model UserMatch {
  id      Int     @id @default(autoincrement())
  userId  Int
  matchId Int
  score   Int
  isWin   Boolean
  user    User    @relation(fields: [userId], references: [id])
  match   Match   @relation(fields: [matchId], references: [id])
}

model Block {
  id         Int       @id @default(autoincrement())
  blockerId  Int
  blockedId  Int
  blockedBy  User      @relation("blockInitiator", fields: [blockerId], references: [id])
  receivedBy User      @relation("blockReceiver", fields: [blockedId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
}

model Channel {
  id         Int           @id @default(autoincrement())
  conv       Boolean       @default(false)
  name       String?       @unique
  password   String?
  creatorId  Int?
  creator    User?         @relation(fields: [creatorId], references: [id])
  users      UserChannel[]
  messages   Message[]
  created_at DateTime
}

model UserChannel {
  id        Int       @id @default(autoincrement())
  userId    Int
  channelId Int
  lastRead  Int       @default(0)
  isAdmin   Boolean   @default(false)
  isBlocked Boolean   @default(false)
  isMuted   DateTime?
  isBanned  Boolean   @default(false)
  user      User      @relation(fields: [userId], references: [id])
  channel   Channel   @relation(fields: [channelId], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  userId     Int
  channelId  Int
  readBy     User[]   @relation("UserReadedMessages")
  user       User     @relation(fields: [userId], references: [id])
  channel    Channel  @relation(fields: [channelId], references: [id])
  created_at DateTime @default(now())
}

enum Status {
  OFFLINE
  ONLINE
  INGAME
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
