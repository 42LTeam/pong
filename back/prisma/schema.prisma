// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int            @id @unique
  avatar              String
  username            String
  secretO2FA          String?
  xp                  Int
  userMatches         UserMatch[]
  friendsInitiated    Friendship[]  @relation("friendshipInitiator")
  friendsAccepted     Friendship[]  @relation("friendshipAcceptor")
  blocksInitiated     Block[]       @relation("blockInitiator")
  blocksReceived      Block[]       @relation("blockReceiver")
  channels            UserChannel[]
  createdChannels     Channel[]
  messages            Message[]
}

model Match {
  id      Int          @id @default(autoincrement())
  users   UserMatch[]
}

model UserMatch {
  id          Int    @id @default(autoincrement())
  userId      Int
  matchId     Int
  score       Int
  user        User   @relation(fields: [userId], references: [id])
  match       Match  @relation(fields: [matchId], references: [id])
}

model Friendship {
  id             Int     @id @default(autoincrement())
  initiatorId    Int
  acceptorId     Int
  initiatedBy    User    @relation("friendshipInitiator", fields: [initiatorId], references: [id])
  acceptedBy     User    @relation("friendshipAcceptor", fields: [acceptorId], references: [id])
  createdAt      DateTime @default(now())
  acceptedAt     DateTime?
}

model Block {
  id             Int     @id @default(autoincrement())
  blockerId      Int
  blockedId      Int
  blockedBy      User    @relation("blockInitiator", fields: [blockerId], references: [id])
  receivedBy     User    @relation("blockReceiver", fields: [blockedId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime?
}

model Channel {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  password    String?
  creatorId   Int
  creator     User          @relation(fields: [creatorId], references: [id])
  users       UserChannel[]
  privated    Boolean
  messages    Message[]
  created_at  DateTime
}

model UserChannel {
  id        Int
  userId    Int
  channelId Int
  isAdmin   Boolean
  isBlocked Boolean
  exited    Boolean
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])

  @@id([userId, channelId])
}

model Message {
  id          Int      @id @default(autoincrement())
  content     String
  userId      Int
  channelId   Int
  user        User     @relation(fields: [userId], references: [id])
  channel     Channel  @relation(fields: [channelId], references: [id])
  created_at  DateTime @default(now())
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}